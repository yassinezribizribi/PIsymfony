# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
   upload_image_directory: '%kernel.project_dir%/public/uploads/images'
   upload_video_directory: '%kernel.project_dir%/public/uploads/videos'  # Correction de l'indentation
   stripe_public_key: '%env(STRIPE_PUBLIC_KEY)%'
   stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'
   uploads_directory: '%kernel.project_dir%/public/uploads/cours'
   images_directory: '%kernel.project_dir%/public/uploads/images'
   videos_directory: '%kernel.project_dir%/public/uploads/videos'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    App\Controller\EvenementfrontController:   
     arguments:
            $stripePublicKey: 'pk_test_51QTuxlIIRDz16IXX93WQ5AfrPBTCJR1jNW1L80k9ODDNi9IrqDupCDdOjkpyrkSyXA1Ehjq5NDy0qWFja8yu2YYk00nosP55u5'
            $stripeSecretKey: 'sk_test_51QTuxlIIRDz16IXXpSY2Wm3VS6QmIIdp07RKyJ9FQ4DeJmZ5SwSl8bkMiLrsBntINJ3c7tMw34nYsq7AgDDFF1rW00gaLU6cvL'
    App\Controller\FrontCoursController:   
     arguments:
            $stripePublicKey: '%stripe_public_key%'
            $stripeSecretKey: '%stripe_secret_key%'
            
        # Custom service definitions
    App\Security\FormLoginAuthenticator:
        arguments:
            $router: '@router'
            $userProvider: '@App\Repository\UtilisateurRepository'
            $passwordHasher: '@security.user_password_hasher'  # Le bon service pour le hasher
                # Example of a custom service with specific configurations

    App\Controller\GoogleController:
        arguments:
            $session: '@session.factory'
